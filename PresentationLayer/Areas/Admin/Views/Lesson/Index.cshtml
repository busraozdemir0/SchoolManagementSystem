@model List<LessonListDto>

@{
    ViewData["Title"] = "Dersler";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Dersler</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-area="Admin" asp-controller="Home" asp-action="Dashboard">Dashboard</a>
            </li>
            <li class="breadcrumb-item active">
                <strong>Ders Listesi</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content  animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="card">
                    <div class="text-nowrap m-5">

                        <a class="btn btn-outline-primary mb-3" asp-area="Admin" asp-controller="Lesson" asp-action="Add">
                            Ders Ekle <i class="fa fa-plus"></i>
                        </a>

                        <table class="table table-striped" id="lessonsTable" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>Ders Kodu</th>
                                    <th>Ders Adı</th>
                                    <th>Haftalık Ders Saati</th>
                                    <th>Sınıf</th>
                                    <th>Öğretmen Bilgisi</th>
                                    <th>Durum</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>Ders Kodu</th>
                                    <th>Ders Adı</th>
                                    <th>Haftalık Ders Saati</th>
                                    <th>Sınıf</th>
                                    <th>Öğretmen Bilgisi</th>
                                    <th>Durum</th>
                                    <th>İşlemler</th>
                                </tr>
                            </tfoot>
                            <tbody class="table-border-bottom-0">
                                @foreach (var lesson in Model)
                                {
                                    <tr name="@lesson.Id">
                                        <td>@lesson.LessonCode</td>
                                        <td>@lesson.LessonName</td>
                                        <td>@lesson.LessonCredit</td>
                                        <td>@lesson.Grade.Name</td>
                                        <td>Ad: @lesson.User.Name @lesson.User.Surname ~ Email: @lesson.User.Email</td>
                                        <td>@(lesson.IsDeleted ? "Aktif Değil" : "Aktif")</td>
                                        <td class="text-center">
                                            <a class="btn btn-primary btn-sm" data-id="@lesson.Id" asp-area="Admin" asp-controller="Lesson" asp-action="Update" asp-route-lessonId="@lesson.Id"><i class="fa fa-edit"></i></a>
                                            <a class="btn btn-danger btn-sm" id="deleteForm" data-guid="@lesson.Id" asp-area="Admin" asp-controller="Lesson" asp-action="SafeDelete" asp-route-lessonId="@lesson.Id" onclick="event.preventDefault(); confirmDelete(this)"><i class="fa fa-trash"></i></a>
                                            @* data-guid kullanmamizin sebebi Lesson tablosunda id Guid degerine sahip. Bu yuzden confirmDelete fonksiyonuna id gondermek yerine this yazarak fonk. icerisinde Guid degerini aldik. *@
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/js/lessonIndex.js" type="application/ecmascript"></script>

    <script>
        function confirmDelete(element) {
            var guid = element.getAttribute('data-guid'); // Guid degeri

            Swal.fire({
                title: 'Silmek istediğinize emin misiniz?',
                text: 'Bu dersi sildiğiniz takdirde bu dersi veren öğretmen sistemde kayıtlı ise ilgili sayfalarda hata alırsınız. Lütfen silmeden önce bu dersi veren öğretmen olup olmadığını kontrol edin! ',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Silme islemini gerceklestir
                    window.location.href = '/Admin/Lesson/SafeDelete?lessonId=' + guid; // silme islemi icin bu sayfaya yonlendirme islemi (gelen id ile birlikte)
                } else {
                    // İptal edildiginde yapilacak islemler
                    console.log("Silme işlemi iptal edildi.");
                    return false;
                }
            });
        }
    </script>
}